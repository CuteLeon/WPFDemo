<Window x:Class="PaintAnimationDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PaintAnimationDemo"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="800">
    <Window.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness Left="10" Bottom="10" Top="10" Right="10"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Line}">
            <Setter Property="X1" Value="0"/>
            <Setter Property="Y1" Value="0"/>
            <Setter Property="X2" Value="100"/>
            <Setter Property="Y2" Value="0"/>
            <Setter Property="Stroke" Value="Gray"/>
            <Setter Property="StrokeThickness" Value="3"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness Left="5" Bottom="20" Top="20" Right="5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Rectangle}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Stroke" Value="Gray"/>
            <Setter Property="StrokeThickness" Value="3"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness Left="5" Bottom="5" Top="5" Right="5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Ellipse}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Stroke" Value="Gray"/>
            <Setter Property="StrokeThickness" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness Left="5" Bottom="5" Top="5" Right="5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Polygon}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Stroke" Value="Gray"/>
            <Setter Property="StrokeThickness" Value="3"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness Left="5" Bottom="5" Top="5" Right="5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Polyline}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Stroke" Value="Gray"/>
            <Setter Property="StrokeThickness" Value="3"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness Left="5" Bottom="5" Top="5" Right="5"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Button x:Name="effectButton" Grid.Row="0" Grid.Column="0" Margin="5" Content="滤镜" Click="effectButton_Click"/>
        <Button x:Name="transformButton" Grid.Row="0" Grid.Column="1" Margin="5" Content="变换" Click="transformButton_Click"/>

        <StackPanel Grid.Row="1" Grid.Column="0">
            <TextBlock Text="Line"/>
            <Line/>
            <Line StrokeDashArray="1"/>
            <Line StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle"/>
            <Line StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                <Line.Stroke>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                        <GradientStop Color="Blue"/>
                        <GradientStop Offset="1"/>
                    </LinearGradientBrush>
                </Line.Stroke>
            </Line>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1">
            <!-- Brush 分类
                SolidColorBrush: 单色实心画刷
                LinearGradientBrush: 线性渐变画刷
                RadialGradientBrush: 径向渐变画刷
                DrawingBrush: 图像回执画刷
                VisualBrush: 可视化刷
            -->
            <TextBlock Text="Rectangle"/>
            <Rectangle RadiusX="10" RadiusY="10"/>
            <Rectangle Fill="{x:Null}"/>
            <Rectangle Fill="Black"/>
            <Rectangle>
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="Red" Offset="0.2"/>
                        <GradientStop Color="Blue" Offset="0.5"/>
                        <GradientStop Color="DeepSkyBlue" Offset="0.7"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle>
                <Rectangle.Fill>
                    <RadialGradientBrush Center="0.5,0.5">
                        <GradientStop Color="Red" Offset="0.1"/>
                        <GradientStop Color="Blue" Offset="0.8"/>
                        <GradientStop Color="Transparent" Offset="0.9"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle>
                <Rectangle.Stroke>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="Red" Offset="0.2"/>
                        <GradientStop Color="Blue" Offset="0.5"/>
                        <GradientStop Color="DeepSkyBlue" Offset="0.7"/>
                    </LinearGradientBrush>
                </Rectangle.Stroke>
            </Rectangle>

            <Button x:Name="button1" Height="20" Content="测试按钮" Margin="5"></Button>
            <Rectangle>
                <Rectangle.Fill>
                    <!-- 可以克隆其他可视化元素的图像 -->
                    <VisualBrush Visual="{Binding ElementName=button1}"/>
                </Rectangle.Fill>
            </Rectangle>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="2">
            <TextBlock Text="Ellipse"/>
            <Ellipse ToolTip="Ball">
                <Ellipse.Fill>
                    <RadialGradientBrush GradientOrigin="0.2,0.8" RadiusX="0.75" RadiusY="0.75">
                        <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Gray" Offset="0.65"/>
                        <GradientStop Color="Black" Offset="1"/>
                    </RadialGradientBrush>
                </Ellipse.Fill>
            </Ellipse>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="3">
            <TextBlock Text="Polygon"/>
            <!-- 闭合直线 -->
            <Polygon>
                <Polygon.Points>
                    <Point X="0" Y="0"/>
                    <Point X="10" Y="100"/>
                    <Point X="100" Y="100"/>
                </Polygon.Points>
            </Polygon>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="4">
            <TextBlock Text="Polyline"/>
            <!-- 非闭合直线 -->
            <Polyline>
                <Polyline.Points>
                    <Point X="0" Y="0"/>
                    <Point X="100" Y="100"/>
                    <Point X="50" Y="100"/>
                    <Point X="0" Y="50"/>
                </Polyline.Points>
            </Polyline>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="5">
            <TextBlock Text="Path"/>
            <Path x:Name="path1" Fill="Orange" Stroke="Red">
                <!-- 数据类型：
                    LineGeometry: 直线几何图形
                    RectangleGeometry: 矩形
                    EllipseGeometry: 椭圆
                    PathGeometry: 路径几何图形
                    StreamGeometry: 轻量级的 PathGeometry
                    CombinedGeometry: 多个几何图形组合
                    GeometryGroup: 多个图形组成的组
                -->
                <Path.Data>
                    <PathGeometry>
                        <PathFigure StartPoint="10,10" IsClosed="True" IsFilled="True">
                            <PathFigure.Segments>
                                <LineSegment Point="10,20"/>
                                <LineSegment Point="20,20"/>
                                <LineSegment Point="30,30"/>
                                <LineSegment Point="80,10"/>
                                <LineSegment Point="160,100"/>
                                <LineSegment Point="10,60"/>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry>
                </Path.Data>
            </Path>
            <!-- 使用 Control.Clip 和 Path 裁剪控件 -->
            <Button Clip="{Binding ElementName=path1,Path=Data}" Height="100" Content="按钮"/>
        </StackPanel>
    </Grid>
</Window>
