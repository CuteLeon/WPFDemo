<Page x:Class="WPFDemo.Pages.HomePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WPFDemo"
      mc:Ignorable="d" 
      d:DesignHeight="364" d:DesignWidth="545"
      Title="HomePage">

    <!-- 可以在元素 A 的完整标签中继续使用 <A.{属性}> 为标签 A 的属性赋值复杂数据 -->
    <Grid Margin="10,10,10,10">

        <!-- 设置容器绑定的资源 -->
        <Grid.Resources>
            <!-- 设置 XML 资源 Key 和 Path -->
            <XmlDataProvider x:Key="ExpenseDataSource" XPath="Expenses">
                <x:XData>
                    <Expenses xmlns="">
                        <Person Name="Mike" Department="Legal">
                            <Expense ExpenseType="Lunch" ExpenseAmount="50" />
                            <Expense ExpenseType="Transportation" ExpenseAmount="50" />
                        </Person>
                        <Person Name="Lisa" Department="Marketing">
                            <Expense ExpenseType="Document printing" ExpenseAmount="50"/>
                            <Expense ExpenseType="Gift" ExpenseAmount="125" />
                        </Person>
                        <Person Name="John" Department="Engineering">
                            <Expense ExpenseType="Magazine subscription" ExpenseAmount="50"/>
                            <Expense ExpenseType="New machine" ExpenseAmount="600" />
                            <Expense ExpenseType="Software" ExpenseAmount="500" />
                        </Person>
                        <Person Name="Mary" Department="Finance">
                            <Expense ExpenseType="Dinner" ExpenseAmount="100" />
                        </Person>
                    </Expenses>
                </x:XData>
            </XmlDataProvider>

            <!-- 设置数据模板 -->
            <DataTemplate x:Key="nameItemTemplate">
                <Label Content="{Binding XPath=@Name}"/>
            </DataTemplate>
        </Grid.Resources>

        <!-- 为 Grid 容器定义一列三行布局 -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="230" />
            <ColumnDefinition MinWidth="200" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <!-- Auto：自动向内容适应 
                   {无}: 自动向容器适应 -->
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition/>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <!-- 背景=图片画刷 -->
        <Grid.Background>
            <ImageBrush ImageSource="/Resources/watermark.png"/>
        </Grid.Background>

        <!-- Style="{StaticResource {样式x:Key}}" 以应用指定 Key 的样式 -->
        <Label Grid.Column="1" Style="{StaticResource headerTextStyle}" >
            View Expense Report
        </Label>

        <!-- 顶部 -->
        <Border Grid.Column="1" Grid.Row="1" Style="{StaticResource listHeaderStyle}">
            <Label Style="{StaticResource listHeaderTextStyle}">Names</Label>
        </Border>

        <!-- 中心 绑定数据源和显示模板-->
        <ListBox Name="peopleListBox" Grid.Column="1" Grid.Row="2" 
             ItemsSource="{Binding Source={StaticResource ExpenseDataSource}, XPath=Person}"
             ItemTemplate="{StaticResource nameItemTemplate}">
        </ListBox>

        <!-- 底部 -->
        <Button Grid.Column="1" Grid.Row="3" Click="Button_Click">View</Button>
        <Button Grid.Column="0" Grid.Row="3" Click="Button_Click" Style="{x:Null}" Content="Another View">
            <!-- 或这样使用 <x:Null/>
            <Button.Style>
                <x:Null/>
            </Button.Style>
            -->

    </Grid>
</Page>
