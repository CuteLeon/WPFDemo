<!-- x 命名空间：
    x:Class 表明XAML文档合并的部分类类型
    x:ClassModifier 类的访问控制级别（需要与x:Class指定的部分类访问控制级别一致）
    x:Name 为元素对象生成引用变量
    x:FieldModifier 字段的访问控制级别（需要 x:Class）
    x:Key 为资源设置用于检索的索引
    x:Shared 检索出的资源是否共享复用（需要 x:Key，默认为 True（多次FindResource()为同一对象），为False时每次FindResource()创建不同对象）
    扩展标记：
    x:Type 用于表达数据类型
    x:Null 空值
-->
<NavigationWindow x:Class="WPFDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFDemo"
        xmlns:pages="clr-namespace:WPFDemo.Pages"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        Source="Pages/HomePage.xaml">
    
    <NavigationWindow.Resources>
        <Style TargetType="{x:Type local:MainWindow}"></Style>
    </NavigationWindow.Resources>
    
    <!-- x:Class => 表示设置 x 命名空间下的 Class 属性，用于绑定此试图到指定类型的窗口类 -->
    <!-- xmlns:{命名空间导入别名}="程序集常量或命名空间路径" => 用于导入命名空间（支持智能提示） -->
    <!-- Source 绑定此导航窗口的源，需要指明源的相对路径 -->
    <!-- 常用布局容器
            Canvas：定义一个区域，可在其中使用相对于画布区域的坐标显式定位子元素。
            DockPanel：定义一个区域，您可以在其中彼此水平或垂直排列子元素。
            Grid：定义由列和行组成的灵活的网格区域。
            StackPanel：将子元素排列到可以水平或垂直方向的单个行中。
            VirtualizingStackPanel：在水平或垂直方向的单个行上排列和虚拟化内容。
            WrapPanel：按从左至右的顺序位置定位子元素，在包含框的边缘处将内容分解到下一行。 后续排序按从上到下或从右到左的顺序进行，具体取决于 "方向" 属性的值。
    -->
</NavigationWindow>
