<Window x:Class="TemplateDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TemplateDemo"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <StackPanel>
        <StackPanel.Resources>
            <DataTemplate x:Key="contentTemplate">
                <StackPanel>
                    <TextBlock Text="{Binding Year}"></TextBlock>
                    <Rectangle Stroke="Yellow" Fill="Orange" Width="{Binding Price}"></Rectangle>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="itemTemplate">
                <StackPanel Orientation="Horizontal">
                    <Grid>
                        <Rectangle Stroke="Red" Fill="Orange" Width="{Binding Price}"></Rectangle>
                        <TextBlock Text="{Binding Year}"></TextBlock>
                    </Grid>
                    <TextBlock Text="{Binding Price}"></TextBlock>
                </StackPanel>
            </DataTemplate>
        </StackPanel.Resources>
        <!-- 使用 Template 实现 内容 和 形式 的解耦
            Template 分为两类：ControlTemplate 和 DataTemplate
            DataTemplate 是数据的外衣，ControlTemplate 是控件的外衣
        -->
        <!-- DataTemplate 的三个用处：
            ContentControl.ControlTemplate
            ItemsControl.ItemTemplate
            GridViewControl.CellTemplate
        -->
        <ListBox x:Name="listBox" ItemTemplate="{StaticResource itemTemplate}" ItemsSource="{Binding}"/>
        <Label ContentTemplate="{StaticResource contentTemplate}" Content="{Binding ElementName=listBox, Path=SelectedItem}"></Label>
    </StackPanel>
</Window>
